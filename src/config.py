from typing import Dict

# GPU environment configuration
GPU_ENV_CONFIG: Dict[str, str] = {
    "CUDA_VISIBLE_DEVICES": "0,1",
    "TOKENIZERS_PARALLELISM": "true",
    "CUDA_LAUNCH_BLOCKING": "0",
    "TORCH_CUDA_ARCH_LIST": "7.0;7.5;8.0;8.6",
}

# Training configuration
TRAINING_CONFIG: Dict[str, any] = {
    "num_epochs": 20,
    "batch_size": 4,
    "learning_rate": 2e-5,
    "warmup_epochs": 2,
    "patience": 5,
    "grad_accumulation_steps": 2,
    "weight_decay": 0.01,
    "clip_grad_norm": 1.0,
    "num_workers": 4,
    "pin_memory": True,
    "mixed_precision": True,
    "amp_dtype": "float16",
}

# Accident cause templates
# This was generated by looking at the mode label for each cause
# This is a valid approach because there is negligible label variance for each cause
TEMPLATES = {
    1: [
        "Motorcyclist fails to observe surrounding traffic during maneuvers",
        "Ego-car does not notice the motorcycle when turning",
        "Motorcycle drives too fast with a short braking distance",
        "Motorcycle is out of control",
    ],
    2: ["Cyclist drives on the motorway for a long time"],
    3: [
        "Ego-car does not notice the cyclists when turning",
    ],
    4: [
        "The truck do not give way to normal driving vehicles when turning or changing lanes",
    ],
    5: [
        "the truck does not notice the coming vehicles when crossing the road",
    ],
    6: [
        "Vehicle exceeds safe speed limit resulting in insufficient stopping distance",
        "Vehicle loses operational stability",
        "Heavy vehicle operator misses oncoming traffic during direction changes",
        "Heavy vehicle performs sudden lane deviation to avoid collision",
        "Leading vehicle performs unexpected rapid deceleration",
        "Ego-car does not notice the truck when turning or changing lanes",
        "Heavy vehicle experiences loss of stability",
        "Ego-car driver fail to estimate the accurate distance when turning",
        "The truck does not notice other vehicles when reversing",
        "Driver's attention diverted from road conditions",
        "Ego-car evades other vehicles, pedestrians or objects and changes lanes emergently",
    ],
    7: [
        "Vehicles exceed safe speed limit resulting in insufficient stopping distance",
        "Vehicles overlook approaching traffic while traversing the roadway",
        "Vehicles disregard traffic signal stop indication",
        "Vehicles fail to yield right of way during lane transitions or turns",
        "Driver's view is obstructed or unclear, preventing timely reaction",
        "Ego-car runs red light",
        "Vehicles make illegal U-turns at pedestrian crossing or no-passing zone",
        "vehicles drive too fast with short braking distance",
    ],
    9: [
        "Motorcycle does not notice the coming vehicles when crossing the road",
        "Two-wheeler violates traffic signal",
    ],
    10: [
        "Pedestrian does not notice the coming vehicles when crossing the street.",
    ],
}

ALL_CAUSES = set()
for causes in TEMPLATES.values():
    ALL_CAUSES.update(causes)

CAUSE_TO_ID = {cause: idx for idx, cause in enumerate(ALL_CAUSES)}
ID_TO_CAUSE = {idx: cause for cause, idx in CAUSE_TO_ID.items()}
CAUSE_TO_CATEGORY = {
    cause: cat for cat, causes in TEMPLATES.items() for cause in causes
}

# Data and model configuration
MODEL_CONFIG = {
    "train_root": "train",
    "train_csv": "train/train_videos.csv",
    "test_root": "test",
    "output_path": "predictions.csv",
    "num_causes": len(ALL_CAUSES),
    "frame_size": 224,
    "num_frames": 16,
    "model_name": "MCG-NJU/videomae-large",
}
